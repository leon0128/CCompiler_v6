#include "lexical_elements.hpp"

extern const std::unordered_map<PreprocessingToken::Tag, std::string> PREPROCESSING_TOKEN_TAG_MAP
    = {{PreprocessingToken::NONE, "NONE"},
       {PreprocessingToken::HEADER_NAME, "HEADER_NAME"},
       {PreprocessingToken::IDENTIFIER, "IDENTIFIER"},
       {PreprocessingToken::PP_NUMBER, "PP_NUMBER"},
       {PreprocessingToken::CHARACTER_CONSTANT, "CHARACTER_CONSTANT"},
       {PreprocessingToken::STRING_LITERAL, "STRING_LITERAL"},
       {PreprocessingToken::PUNCTUATOR, "PUNCTUATOR"},
       {PreprocessingToken::OTHER, "OTHER"}};

extern const std::unordered_map<Punctuator::Tag, std::string> PUNCTUATOR_TAG_MAP
    = {{Punctuator::NONE, "NONE"},
       {Punctuator::LSQUALE_PAREN, "["},
       {Punctuator::RSQUALE_PAREN, "]"},
       {Punctuator::LPAREN, "("},
       {Punctuator::RPAREN, ")"},
       {Punctuator::LBLOCK_PAREN, "{"},
       {Punctuator::RBLOCK_PAREN, "}"},
       {Punctuator::DOT, "."},
       {Punctuator::ARROW, "->"},
       {Punctuator::INCLEMENT, "++"},
       {Punctuator::DECLEMENT, "--"},
       {Punctuator::BITWISE_AND, "&"},
       {Punctuator::ASTERISK, "*"},
       {Punctuator::PLUS, "+"},
       {Punctuator::MINUS, "-"},
       {Punctuator::TILDE, "~"},
       {Punctuator::NOT, "!"},
       {Punctuator::SLASH, "/"},
       {Punctuator::PERCENT, "%"},
       {Punctuator::LSHIFT, "<<"},
       {Punctuator::RSHIFT, ">>"},
       {Punctuator::LESS, "<"},
       {Punctuator::GREATER, ">"},
       {Punctuator::LESS_EQUAL, "<="},
       {Punctuator::GREATER_EQUAL, ">="},
       {Punctuator::EQUAL, "=="},
       {Punctuator::NOT_EQUAL, "!="},
       {Punctuator::BITWISE_EXCLUSIVE_OR, "^"},
       {Punctuator::BITWISE_INCLUSIVE_OR, "|"},
       {Punctuator::LOGICAL_AND, "&&"},
       {Punctuator::LOGICAL_OR, "||"},
       {Punctuator::QUESTION, "?"},
       {Punctuator::COLON, ":"},
       {Punctuator::SEMICOLON, ";"},
       {Punctuator::DOTDOTDOT, "..."},
       {Punctuator::ASSIGN, "="},
       {Punctuator::ASTERISK_ASSIGN, "*="},
       {Punctuator::SLASH_ASSIGN, "/="},
       {Punctuator::PERCENT_ASSIGN, "%="},
       {Punctuator::PLUS_ASSING, "+="},
       {Punctuator::MINUS_ASSIGN, "-="},
       {Punctuator::LSHIFT_ASSIGN, "<<="},
       {Punctuator::RSHIFT_ASSIGN, ">>="},
       {Punctuator::BITWISE_AND_ASSIGN, "&="},
       {Punctuator::BITWISE_EXCLUSIVE_OR_ASSING, "^="},
       {Punctuator::BITWISE_INCLUSIVE_OR_ASSING, "|="},
       {Punctuator::COMMA, ","},
       {Punctuator::HASH, "#"},
       {Punctuator::HASHHASH, "##"}};